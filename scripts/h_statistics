*******************************
***		transfer-Plattform 	***
***		SOEP statistics 	***
***		Haushaltsdatensatz	***
*******************************

clear all
set more off
capture log close


* Define paths
global data "/Users/katjaschmidt/Desktop/SOEPdata/v36/"
global save "/Users/katjaschmidt/Desktop/SOEPdata/plattform/"

* Load and merge datasets

use pid hid syear h11101 d11101 d11102ll d11107 using ${data}pequiv.dta, clear

merge 1:1 pid hid syear using ${data}pbrutto.dta, nogen keep(1 3) keepusing (stell_h)
merge m:1 hid syear using ${data}hpathl.dta, nogen keep(1 3) keepusing(hhrf hhrf1 sampreg hsample hpop)
merge m:1 hid syear using ${data}hgen.dta, nogen keep(1 3) keepusing (hgelectr hgeqpgar ///
		hgeqpinsul hgeqpmglass hgeqpsol hgeqpter hgheat hghinc hgi1hinc hgowner hgrent ///
		hgroom hgsize hgtyp1hh hgelectrinfo hgheatinfo hgutilinfo hgtyp1hh hgtyp2hh)
merge m:1 hid syear using ${data}hl.dta, nogen keep(1 3) keepusing (hlc0043 hlc0052 ///
		hlc0061_h hlc0080_h hlc0083_h hlc0119_h hlc0178 hlc0180 hlc0182 hlf0036 hlf0071_h ///
		hlf0151 hlf0178_h hlf0180 hlf0186 hlf0188  hlf0192 hlf0197 hlf0261 hlf0291 hlf0436_h ///
		hlf0633 hlf0613 hlf0631 hlf0632 hlk0044 hlf0084 hlf0090_h hlf0091_h hlf0435_h)
merge m:1 hid syear using ${data}hbrutto.dta, nogen keep(1 3) keepusing (bula_h hhgr regtyp)


* Define population
keep if inlist(hpop,1,2)
drop if hhrf == 0


*Missings to systemmissings NA
mvdecode _all, mv(-1/-8)


************ Dimensionen erstellen ******************
* sampreg bula regtyp mieter einkommen hgtyp1hh

*Labels
* Sampreg
lab var sampreg "Ost-/ Westdeutschland"
label define sampreg_lbl 1 "West" 2 "Ost"
label values sampreg sampreg_lbl

*bula
lab var bula "Bundesland"
label define bula_lbl 1	"Schleswig-Holstein" 2	"Hamburg" 3	"Niedersachsen" 4	"Bremen" 5	"Nordrhein-Westfalen" 6	"Hessen" 7	"Rheinland-Pfalz,Saarland" 8	"Baden-Württemberg" 9	"Bayern" 10	"Saarland" 11	"Berlin" 12	"Brandenburg" 13	"Mecklenburg-Vorpommern" 14	"Sachsen" 15	"Sachsen-Anhalt" 16	"Thüringen"
label values bula bula_lbl

* regtyp
tab regtyp
lab var regtyp "Siedlungsstruktur"

* Haushaltstyp
tab hgtyp1hh

gen hhtyp=hgtyp1hh
recode hhtyp (4 5 6=4) (7 8 =5)
lab var hhtyp "Haushaltstyp"
lab def hhtyp_lbl 1 "1-Pers.-HH" 2 "(Ehe-)Paar ohne Kind(er)" 3 "Alleinerziehende" 4 "Paar mit Kind(ern)" 5"Sonstige"
lab val hhtyp hhtyp_lbl


*******Netto-Haushaltseinkommensgruppe nach modified OECD-Äquivalenzeinkommen // modifiziertes OECD-Äquivalenzeinkommen

* OECD Nettoäquivalenzeinkommen

gen oecdweight = 1 + (hhgr - h11101 - 1)*0.5 + (h11101*0.3)
gen hinc_eq = hgi1hinc/oecdweight
lab var oecdweight "OECD-Gewichtungsfaktor für HH-Äquivalenzeinkommen"
lab var hinc_eq "OECD-Äquivalenzeinkommen"

***** Einkommen in Quintilen
sumdist hinc_eq [w=round(hhrf)], n(5) qgp(quintil)
label var quintil "Netto-HH-Einkommens-Quintile"


* Eigentümer / Mieter
gen eigentum=hgowner
recode eigentum (1=1) (2 3 4 = 2)
label variable eigentum "Eigentümer"
label define eigentum_lbl 1 "Eigentümer" 2 "Mieter"
label values eigentum eigentum_lbl
tab eigentum

************** Variablen *******************

*** Kategorielle Variablen
* Labels bei Bedarf anpassen

lab var hlf0071_h "Beurteilung der Wohnungsgroesse"
lab var hlc0083_h "Wohngeld heute"
lab var hlf0178_h "Internetzugang"
lab var hlc0052 "ALG2, Sozialgeld im letzten Jahr"
lab var hgeqpgar "Garten"
lab var hgeqpinsul "Wärmedämmung"
lab var hgeqpmglass "mind. Doppelverglasung"
lab var hgeqpsol "Solaranlage"
lab var hgeqpter "Balkon, Terrasse"
lab var hlc0061_h "Grundsicherung im Alter, Vorjahr"
lab var hlc0080_h "Wohngeld,Lastenzuschuss Vorjahr"
lab var hlc0119_h "Sparbetrag monatlich"


*** Metrische Variablen ***
*Gemeinsame Strom-, Heiz- und Umlagekostenvariablen generieren:

* Stromkosten für Mieter: hgelectr, für Eigentümer: hlf0084 (Frage an alle, aber nur Eigentümer in Variable enthalten) 
gen strom=hgelectr
replace strom=hlf0084/12 if strom==.
label var strom "Mntl. Stromkosten"
tab hgelectrinfo
recode strom(.=0) if hgelectrinfo==3

* Heiz- und Warmwasserkosten für Mieter: hgfheat, für Eigentümer: hlf0090_h (Frage an alle, aber nur Eigentümer in Variable enthalten) 
gen heizen=hgheat
replace heizen=hlf0090_h/12 if heizen==.
label var heizen "Mntl. Heiz- und Warmwasserkosten"
tab hgheatinfo
recode heizen (.=0) if hgheatinfo==3

* Umlagekosten für Mieter: hgutil, für Eigentümer: hlf0091_h (Frage an alle, aber nur Eigentümer in Variable enthalten) 
gen umlage=hgutil
replace umlage=hlf0091_h/12 if umlage==.
label var umlage "Mntl. Umlagekosten"
tab hgutilinfo
recode umlage(.=0) if hgutilinfo==3

*Ausgaben für Lebensmittel
gen essen=hlf0436_h
replace essen=hlf0435_h*13/3 if essen==.
label var essen "Mntl. Ausgaben Lebensmittel"

*Beurteilung Belastung durch Wohnkosten für Mieter und Eigentümer zusammenfassen: hlf0632 hlf0633
gen wohnk = hlf0632 
replace wohnk=hlf0633 if wohnk==.
label variable wohnk "Beurteilung Belastung durch Wohnkosten"

* Anzahl Kinder im HH 0-14
lab var h11101 "Anzahl Kinder im HH 0-14 J."
lab var d11107 "Anzahl Kinder im HH"


drop hpop hgi1hinc d11101 d11102ll hgelectrinfo hgutilinfo hgheatinfo ///
hgelectr hgheat hgtyp1hh hgtyp2hh hlc0043 hlf0084 hlf0090_h hlf0091_h hlf0435_h hlf0436_h ///
oecdweight


* Speichern
save ${save}h_statistics.dta, replace
